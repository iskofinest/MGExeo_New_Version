
package Forms.WarehouseAdmin;

import Entities.Department;
import Entities.Purchases.ReceivingReport;
import Entities.Supplier;
import Services.DepartmentService;
import Services.ReceivingReportService;
import Services.SupplierService;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class ViewReceiving extends javax.swing.JFrame {

    private Frame frame;
    List<Department> departments;
    List<ReceivingReport> receivingReports;
    List<Supplier> suppliers;
    DefaultTableModel tableModel;
    Vector<String> columns = new Vector<>();
    
    public ViewReceiving() {
        initComponents();
        initializeData();
    }
    
    public ViewReceiving(Frame frame) {
        initComponents();
        this.frame = frame;
        initializeData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jdcDateTo = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        cbxDepartment = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jdcDateFrom = new com.toedter.calendar.JDateChooser();
        btnAll = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        cbxSupplierCode = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbxSupplierName = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReceiving = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1936, 1038));
        setSize(new java.awt.Dimension(1936, 1038));

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("RECEIVING REPORTS");

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));

        jPanel4.setBackground(new java.awt.Color(102, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));

        jPanel3.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Department:  ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Supplier Code:  ");

        jdcDateTo.setBackground(new java.awt.Color(102, 153, 255));
        jdcDateTo.setDateFormatString("MMMM-dd-yyyy");
        jdcDateTo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Date To:   ");

        cbxDepartment.setBackground(new java.awt.Color(240, 240, 240));
        cbxDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDepartmentActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Date From:  ");

        jdcDateFrom.setBackground(new java.awt.Color(102, 153, 255));
        jdcDateFrom.setDateFormatString("MMMM-dd-yyyy");
        jdcDateFrom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        btnAll.setBackground(new java.awt.Color(102, 153, 255));
        btnAll.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAll.setText("All");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbxSupplierCode.setBackground(new java.awt.Color(240, 240, 240));
        cbxSupplierCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSupplierCodeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Supplier Name:  ");

        cbxSupplierName.setBackground(new java.awt.Color(240, 240, 240));
        cbxSupplierName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSupplierNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(btnAll)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(98, Short.MAX_VALUE))
            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcDateTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jdcDateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxSupplierName, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxSupplierCode, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxDepartment, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAll)
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxSupplierCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        tblReceiving.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RR No", "Supplier", "Department", "Date", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReceiving.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReceivingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblReceiving);
        if (tblReceiving.getColumnModel().getColumnCount() > 0) {
            tblReceiving.getColumnModel().getColumn(1).setMinWidth(750);
            tblReceiving.getColumnModel().getColumn(1).setMaxWidth(750);
            tblReceiving.getColumnModel().getColumn(2).setMinWidth(300);
            tblReceiving.getColumnModel().getColumn(2).setMaxWidth(300);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1422, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDepartmentActionPerformed
        SwingUtilities.invokeLater(() -> {
            if(cbxDepartment.getSelectedIndex()> -1) {
                searchReceivingReport();
            }
        });
    }//GEN-LAST:event_cbxDepartmentActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(() -> {
            enableFields(!btnAll.isSelected());
            if(btnAll.isSelected()) {
                receivingReports = ReceivingReportService.findWithSupplier();
                reloadTable();
            } else {
                receivingReports = new ArrayList();
                searchReceivingReport();
            }
            System.out.println("RECEIVING REPORT SIZE: " + receivingReports.size());
        });
    }//GEN-LAST:event_btnAllActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        SwingUtilities.invokeLater(() -> {
            searchReceivingReport();
//            Department department = (cbxDepartment.getSelectedIndex() > -1) ? departments.get(cbxDepartment.getSelectedIndex()) : null;
//            searchPO();
        });
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbxSupplierCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSupplierCodeActionPerformed
        if(cbxSupplierCode.getSelectedIndex() > -1) {
//            SwingUtilities.invokeLater(() -> {
                int index = cbxSupplierCode.getSelectedIndex();
                cbxSupplierName.setSelectedIndex(index);
                searchReceivingReport();
//            });
        }   
    }//GEN-LAST:event_cbxSupplierCodeActionPerformed

    private void cbxSupplierNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSupplierNameActionPerformed
        if(cbxSupplierName.getSelectedIndex() > -1) {
//            SwingUtilities.invokeLater(() -> {
                int index = cbxSupplierName.getSelectedIndex();
                cbxSupplierCode.setSelectedIndex(index);
                searchReceivingReport();
//            });
        }   
    }//GEN-LAST:event_cbxSupplierNameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        SwingUtilities.invokeLater(() -> {
            dispose();
            frame.setVisible(true);
        });
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblReceivingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReceivingMouseClicked
        SwingUtilities.invokeLater(() -> {
            if(evt.getClickCount()>1) {
                JTable source = (JTable)evt.getSource();
                int row = source.rowAtPoint( evt.getPoint());
                ReceivingReport receivingReport = receivingReports.get(row);
                dispose();
                new ShowReceivingReport(this, receivingReport).setVisible(true);
            }
        });
    }//GEN-LAST:event_tblReceivingMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewReceiving.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewReceiving.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewReceiving.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewReceiving.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewReceiving().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox btnAll;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbxDepartment;
    private javax.swing.JComboBox<String> cbxSupplierCode;
    private javax.swing.JComboBox<String> cbxSupplierName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcDateFrom;
    private com.toedter.calendar.JDateChooser jdcDateTo;
    private javax.swing.JTable tblReceiving;
    // End of variables declaration//GEN-END:variables

    private void initializeData() {
        columns.add("RR No");
        columns.add("Supplier Name");
        columns.add("Department");
        columns.add("Date");
        columns.add("Total Amount");
        departments = DepartmentService.findAll();
        suppliers = SupplierService.findAll();

        SwingUtilities.invokeLater(() -> {
            tblReceiving.setDefaultEditor(Object.class, null);
            AutoCompleteDecorator.decorate(cbxDepartment);
            AutoCompleteDecorator.decorate(cbxSupplierCode);
            AutoCompleteDecorator.decorate(cbxSupplierName);
            DefaultComboBoxModel departmentModel = new DefaultComboBoxModel();
            DefaultComboBoxModel supplierCodeModel = new DefaultComboBoxModel();
            DefaultComboBoxModel supplierNameModel = new DefaultComboBoxModel();
            departments.forEach(department -> {
                departmentModel.addElement(department.getName());
            });
            suppliers.forEach(supplier -> {
                supplierCodeModel.addElement(supplier.getCode());
                supplierNameModel.addElement(supplier.getName());
            });
            cbxDepartment.setModel(departmentModel);
            cbxSupplierCode.setModel(supplierCodeModel);
            cbxSupplierName.setModel(supplierNameModel);
            cbxDepartment.setSelectedIndex(-1);
            cbxSupplierCode.setSelectedIndex(-1);
            cbxSupplierName.setSelectedIndex(-1);
            GregorianCalendar cal = new GregorianCalendar();
            cal.setTime(new Date());
            cal.add(Calendar.DATE, -1);
            jdcDateFrom.setDate(cal.getTime());
            jdcDateTo.setDate(new Date());
        });
    }
    
    private void enableFields(boolean enability) {
        cbxDepartment.setEnabled(enability);
        jdcDateFrom.setEnabled(enability);
        jdcDateTo.setEnabled(enability);
        cbxSupplierCode.setEnabled(enability);
        cbxSupplierName.setEnabled(enability);
    }

    private void reloadTable() {
        Vector<Vector> dataTable = new Vector<>();
        receivingReports.forEach(receivingReport -> {
            Vector<String> row = new Vector<>();
            row.add(receivingReport.getRrNo());
            row.add(receivingReport.getPurchaseOrder().getSupplier().getName());
            row.add(receivingReport.getPurchaseOrder().getProject().getDepartment().getName());
            try {
                row.add(receivingReport.getDeliverDate().toString());
            } catch(Exception e) {
                row.add("");
            }
            try {
                row.add(receivingReport.getTotalAmount().toString());
            } catch(Exception e) {
                row.add("0.00");
            }
            dataTable.add(row);
        });
        tableModel = new DefaultTableModel(dataTable, columns);
        tblReceiving.setModel(tableModel);
    }

    private void searchReceivingReport() {
        Department department = (cbxDepartment.getSelectedIndex() > -1) ? departments.get(cbxDepartment.getSelectedIndex()): null;
        Supplier supplier = (cbxSupplierCode.getSelectedIndex() > -1) ?suppliers.get(cbxSupplierCode.getSelectedIndex()) : null;
        Date dateFrom = jdcDateFrom.getDate();
        Date dateTo = jdcDateTo.getDate();
        receivingReports = ReceivingReportService.findBy(department, supplier, dateFrom, dateTo);
        reloadTable();
        System.err.println("RELOAD TABLE DONE . . . .");
        System.err.println("RELOAD TABLE DONE . . . .");
        System.err.println("RELOAD TABLE DONE . . . .");
        System.err.println("RELOAD TABLE DONE . . . .");
        if(department != null) System.err.println("DEPARTMENT" + department.getName());
        System.err.println("SUPPLIER" + supplier.getName());
    }
}
